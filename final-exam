#include <stdio.h>
#include <memory.h>
#include <stdlib.h>
#include <string.h>

#define MAX_NLEN    20 
#define MAX_TIME 2
typedef struct {
    char name[MAX_NLEN + 1];
    int num; 
    int number[MAX_TIME];
}Student;


const char *stitles[MAX_TIME] = { "전반 발언","후반 발언" };

#define MAX_STUDENT 30

Student stues[MAX_STUDENT];

void Initialize();
void Run();
int main(void)
{

    Initialize();
    Run();

    return 0;
}


void Initialize()
{
    int i = 0;
    int s = 0;

    for (i = 0; i<MAX_STUDENT; i++)
    {
        for (s = 0; s<MAX_TIME; s++)
        {
            stues[i].number[s] = -1; 
        }
    }
}

int SelectMenu();
void AddStudent();
void RemoveStudent();
void FindStudent();
void ListStudent();
void Run()
{
    int key = 0;
    while ((key = SelectMenu()) != 0)
    {
        switch (key)
        {
        case 1: AddStudent(); break;
        case 2: RemoveStudent(); break;
        case 3: FindStudent(); break;
        case 4: ListStudent(); break;
        default: printf("잘못 선택하였습니다.\n"); break;
        }
    }
    printf("프로그램 종료\n");
}

int SelectMenu()
{
    int key = 0;
    printf("발언 횟수 관리 프로그램 0:종료\n");
    printf("1: 학생 데이터 입력 2: 학생 데이터 삭제 3: 학생 검색 4: 목록 보기 \n");
    scanf_s("%d", &key);
    return key;
}

int IsAvailNum(int num);
int IsAvailnumber(int number);
void AddStudent()
{
    int num = 0;
    Student *stu = 0;
    int s = 0;

    printf("추가할 학생 번호(1~%d): ", MAX_STUDENT);
    scanf_s("%d", &num);

    if (IsAvailNum(num) == 0)
    {
        printf("범위를 벗어난 학생 번호입니다.\n");
        return;
    }

    if (stues[num - 1].num)
    {
        printf("이미 추가하였습니다\n");
        return;
    }
  
    stu = stues + (num - 1);
    stu->num = num;
    printf("이름: ");
    scanf_s("%s", stu->name, sizeof(stu->name));

    for (s = 0; s<MAX_TIME; s++)
    {
        printf("%s 횟수:", stitles[s]);
        scanf_s("%d", stu->number + s);

        if (IsAvailnumber(stu->number[s]) == 0)
        {
            stu->number[s] = -1;
            printf("입력한 횟수가 유효하지 않아서 %s 횟수는 입력 처리하지 않았습니다.\n", stitles[s]);
        }
    }
}
int IsAvailNum(int num)
{
    return (num >= 1) && (num <= MAX_STUDENT);
}
int IsAvailnumber(int number)
{
    return (number >= 0) && (number <= 100);
}
void RemoveStudent()
{
    int num = 0;
    Student *stu = 0;
    int s = 0;

    printf("삭제할 학생 번호(1~%d): ", MAX_STUDENT);
    scanf_s("%d", &num);

    if (IsAvailNum(num) == 0)
    {
        printf("범위를 벗어난 학생 번호입니다.\n");
        return;
    }

    if (stues[num - 1].num == 0)
    {
        printf("데이터가 없습니다.\n");
        return;
    }

    stu = stues + (num - 1);
    strcpy_s(stu->name, sizeof(stu->name), "");
    stu->num = 0;
    for (s = 0; s<MAX_TIME; s++)
    {
        stu->number[s] = -1;
    }

    printf("삭제하였습니다.\n");
}
void ViewStuData(Student *stu);
void FindStudent()
{
    int num = 0;
    Student *stu = 0;
    int s = 0;

    printf("검색할 학생 번호(1~%d): ", MAX_STUDENT);
    scanf_s("%d", &num);

    if (IsAvailNum(num) == 0)
    {
        printf("범위를 벗어난 학생 번호입니다.\n");
        return;
    }

    if (stues[num - 1].num == 0)
    {
        printf("데이터가 없습니다.\n");
        return;
    }

    stu = stues + (num - 1);
    ViewStuData(stu);
}
void ViewStuData(Student *stu)
{
    int i = 0;
    int s = 0;

    printf("%4d %10s ", stu->num, stu->name);
    for (s = 0; s<MAX_TIME; s++)
    {
        printf("%4d ", stu->number[s]);
    }
    printf("\n");
}
void ListStudent()
{
    int i = 0;
    int s = 0;

    printf("%4s %10s ", "번호", "이름");
    for (s = 0; s<MAX_TIME; s++)
    {
        printf("%4s ", stitles[s]);
    }
    printf("횟수가 -1인 곳은 미입력\n");

    for (i = 0; i<MAX_STUDENT; i++)
    {
        if (stues[i].num)
        {
            ViewStuData(stues + i);
        }
    }
}
